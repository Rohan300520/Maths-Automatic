
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CDOT CLOSEDC CLOSEDCO CLOSEDP EQ LFRAC MIN NEQ NUMBER OPENC OPENCO OPENP PLUS POW SQRT SUB VARGL : ELEL : ER EQ EREL : ER NEQ EREL : ER EQEL : ER NEQEL : ERER : T PLUS ERER : T MIN ERER : TT : SUBSC CDOT TT : SUBSC SUBSC : PW SUB SUBSCSUBSC : PWPW : FR POW PWPW : FRFR : LFRAC OPENC ER CLOSEDC OPENC ER CLOSEDCFR : S LFRAC OPENC ER CLOSEDC OPENC ER CLOSEDCFR : SS : SQRT OPENC ER CLOSEDCS : S SQRT OPENC ER CLOSEDCS : S FS : PLUS FS : MIN FS : FF : NUMBERF : VARF : PP : OPENP ER CLOSEDPP : CC : OPENCO ER CLOSEDCOC : BB : OPENC ER CLOSEDC'
    
_lr_action_items = {'LFRAC':([0,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,47,48,49,51,52,56,57,59,61,],[10,10,33,-24,-25,-26,-27,10,-29,10,-31,10,10,10,10,-22,-23,10,10,10,10,-21,10,-32,10,10,-28,-30,-19,10,-20,10,]),'SQRT':([0,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,47,48,49,51,52,56,57,59,61,],[13,13,34,-24,-25,-26,-27,13,-29,13,-31,13,13,13,13,-22,-23,13,13,13,13,-21,13,-32,13,13,-28,-30,-19,13,-20,13,]),'PLUS':([0,4,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,43,44,45,47,48,49,51,52,56,57,59,61,62,64,],[5,24,-11,-13,-15,5,-18,-24,-25,-26,-27,5,-29,5,-31,5,5,5,5,-22,-23,5,5,5,5,-21,5,-10,-12,-14,-32,5,5,-28,-30,-19,5,-20,5,-16,-17,]),'MIN':([0,4,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,43,44,45,47,48,49,51,52,56,57,59,61,62,64,],[6,25,-11,-13,-15,6,-18,-24,-25,-26,-27,6,-29,6,-31,6,6,6,6,-22,-23,6,6,6,6,-21,6,-10,-12,-14,-32,6,6,-28,-30,-19,6,-20,6,-16,-17,]),'NUMBER':([0,5,6,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,47,48,49,51,52,56,57,59,61,],[15,15,15,15,15,-24,-25,-26,-27,15,-29,15,-31,15,15,15,15,-22,-23,15,15,15,15,-21,15,-32,15,15,-28,-30,-19,15,-20,15,]),'VAR':([0,5,6,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,47,48,49,51,52,56,57,59,61,],[16,16,16,16,16,-24,-25,-26,-27,16,-29,16,-31,16,16,16,16,-22,-23,16,16,16,16,-21,16,-32,16,16,-28,-30,-19,16,-20,16,]),'OPENP':([0,5,6,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,47,48,49,51,52,56,57,59,61,],[18,18,18,18,18,-24,-25,-26,-27,18,-29,18,-31,18,18,18,18,-22,-23,18,18,18,18,-21,18,-32,18,18,-28,-30,-19,18,-20,18,]),'OPENCO':([0,5,6,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,47,48,49,51,52,56,57,59,61,],[20,20,20,20,20,-24,-25,-26,-27,20,-29,20,-31,20,20,20,20,-22,-23,20,20,20,20,-21,20,-32,20,20,-28,-30,-19,20,-20,20,]),'OPENC':([0,5,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,47,48,49,51,52,53,56,57,58,59,61,],[11,11,11,31,11,11,36,-24,-25,-26,-27,11,-29,11,-31,11,11,11,11,-22,-23,11,11,11,11,48,49,-21,11,-32,11,11,-28,-30,57,-19,11,61,-20,11,]),'$end':([1,2,3,4,7,8,9,12,14,15,16,17,19,21,22,23,26,27,35,39,40,41,42,43,44,45,47,51,52,56,59,62,64,],[0,-1,-6,-9,-11,-13,-15,-18,-24,-25,-26,-27,-29,-31,-4,-5,-22,-23,-21,-2,-3,-7,-8,-10,-12,-14,-32,-28,-30,-19,-20,-16,-17,]),'EQ':([3,4,7,8,9,12,14,15,16,17,19,21,26,27,35,41,42,43,44,45,47,51,52,56,59,62,64,],[22,-9,-11,-13,-15,-18,-24,-25,-26,-27,-29,-31,-22,-23,-21,-7,-8,-10,-12,-14,-32,-28,-30,-19,-20,-16,-17,]),'NEQ':([3,4,7,8,9,12,14,15,16,17,19,21,26,27,35,41,42,43,44,45,47,51,52,56,59,62,64,],[23,-9,-11,-13,-15,-18,-24,-25,-26,-27,-29,-31,-22,-23,-21,-7,-8,-10,-12,-14,-32,-28,-30,-19,-20,-16,-17,]),'CLOSEDC':([4,7,8,9,12,14,15,16,17,19,21,26,27,32,35,41,42,43,44,45,46,47,50,51,52,54,55,56,59,60,62,63,64,],[-9,-11,-13,-15,-18,-24,-25,-26,-27,-29,-31,-22,-23,47,-21,-7,-8,-10,-12,-14,53,-32,56,-28,-30,58,59,-19,-20,62,-16,64,-17,]),'CLOSEDP':([4,7,8,9,12,14,15,16,17,19,21,26,27,35,37,41,42,43,44,45,47,51,52,56,59,62,64,],[-9,-11,-13,-15,-18,-24,-25,-26,-27,-29,-31,-22,-23,-21,51,-7,-8,-10,-12,-14,-32,-28,-30,-19,-20,-16,-17,]),'CLOSEDCO':([4,7,8,9,12,14,15,16,17,19,21,26,27,35,38,41,42,43,44,45,47,51,52,56,59,62,64,],[-9,-11,-13,-15,-18,-24,-25,-26,-27,-29,-31,-22,-23,-21,52,-7,-8,-10,-12,-14,-32,-28,-30,-19,-20,-16,-17,]),'CDOT':([7,8,9,12,14,15,16,17,19,21,26,27,35,44,45,47,51,52,56,59,62,64,],[28,-13,-15,-18,-24,-25,-26,-27,-29,-31,-22,-23,-21,-12,-14,-32,-28,-30,-19,-20,-16,-17,]),'SUB':([8,9,12,14,15,16,17,19,21,26,27,35,45,47,51,52,56,59,62,64,],[29,-15,-18,-24,-25,-26,-27,-29,-31,-22,-23,-21,-14,-32,-28,-30,-19,-20,-16,-17,]),'POW':([9,12,14,15,16,17,19,21,26,27,35,47,51,52,56,59,62,64,],[30,-18,-24,-25,-26,-27,-29,-31,-22,-23,-21,-32,-28,-30,-19,-20,-16,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'GL':([0,],[1,]),'EL':([0,],[2,]),'ER':([0,11,18,20,22,23,24,25,31,36,48,49,57,61,],[3,32,37,38,39,40,41,42,46,50,54,55,60,63,]),'T':([0,11,18,20,22,23,24,25,28,31,36,48,49,57,61,],[4,4,4,4,4,4,4,4,43,4,4,4,4,4,4,]),'SUBSC':([0,11,18,20,22,23,24,25,28,29,31,36,48,49,57,61,],[7,7,7,7,7,7,7,7,7,44,7,7,7,7,7,7,]),'PW':([0,11,18,20,22,23,24,25,28,29,30,31,36,48,49,57,61,],[8,8,8,8,8,8,8,8,8,8,45,8,8,8,8,8,8,]),'FR':([0,11,18,20,22,23,24,25,28,29,30,31,36,48,49,57,61,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'S':([0,11,18,20,22,23,24,25,28,29,30,31,36,48,49,57,61,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'F':([0,5,6,11,12,18,20,22,23,24,25,28,29,30,31,36,48,49,57,61,],[14,26,27,14,35,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'P':([0,5,6,11,12,18,20,22,23,24,25,28,29,30,31,36,48,49,57,61,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'C':([0,5,6,11,12,18,20,22,23,24,25,28,29,30,31,36,48,49,57,61,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'B':([0,5,6,11,12,18,20,22,23,24,25,28,29,30,31,36,48,49,57,61,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> GL","S'",1,None,None,None),
  ('GL -> EL','GL',1,'p_gl','yacc.py',10),
  ('EL -> ER EQ ER','EL',3,'p_el_er_eq_er','yacc.py',15),
  ('EL -> ER NEQ ER','EL',3,'p_el_er_neq_er','yacc.py',19),
  ('EL -> ER EQ','EL',2,'p_el_er_eq','yacc.py',23),
  ('EL -> ER NEQ','EL',2,'p_el_er_neq','yacc.py',27),
  ('EL -> ER','EL',1,'p_el_er','yacc.py',31),
  ('ER -> T PLUS ER','ER',3,'p_er_er_plus_t','yacc.py',35),
  ('ER -> T MIN ER','ER',3,'p_er_er_min_t','yacc.py',39),
  ('ER -> T','ER',1,'p_er_t','yacc.py',43),
  ('T -> SUBSC CDOT T','T',3,'p_er_t_subsc_cdot_t','yacc.py',47),
  ('T -> SUBSC','T',1,'p_er_t_subsc','yacc.py',51),
  ('SUBSC -> PW SUB SUBSC','SUBSC',3,'p_er_subsc_pw_sub_subsc','yacc.py',55),
  ('SUBSC -> PW','SUBSC',1,'p_er_subsc_pw','yacc.py',59),
  ('PW -> FR POW PW','PW',3,'p_pw_pw_pow_fr','yacc.py',71),
  ('PW -> FR','PW',1,'p_pw_fr','yacc.py',75),
  ('FR -> LFRAC OPENC ER CLOSEDC OPENC ER CLOSEDC','FR',7,'p_fr_lfrac','yacc.py',79),
  ('FR -> S LFRAC OPENC ER CLOSEDC OPENC ER CLOSEDC','FR',8,'p_fr_s_lfrac','yacc.py',83),
  ('FR -> S','FR',1,'p_fr_s','yacc.py',87),
  ('S -> SQRT OPENC ER CLOSEDC','S',4,'p_s_sqrt','yacc.py',91),
  ('S -> S SQRT OPENC ER CLOSEDC','S',5,'p_s_s_sqrt','yacc.py',95),
  ('S -> S F','S',2,'p_s_f_s','yacc.py',99),
  ('S -> PLUS F','S',2,'p_s_plus_f','yacc.py',103),
  ('S -> MIN F','S',2,'p_s_min_f','yacc.py',107),
  ('S -> F','S',1,'p_s_f','yacc.py',111),
  ('F -> NUMBER','F',1,'p_f_number','yacc.py',115),
  ('F -> VAR','F',1,'p_f_var','yacc.py',119),
  ('F -> P','F',1,'p_f_p','yacc.py',123),
  ('P -> OPENP ER CLOSEDP','P',3,'p_p_openp','yacc.py',127),
  ('P -> C','P',1,'p_p_c','yacc.py',131),
  ('C -> OPENCO ER CLOSEDCO','C',3,'p_c_openco','yacc.py',135),
  ('C -> B','C',1,'p_c_b','yacc.py',139),
  ('B -> OPENC ER CLOSEDC','B',3,'p_b_openc','yacc.py',143),
]
